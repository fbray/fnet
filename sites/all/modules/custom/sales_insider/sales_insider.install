<?php
/**
 * Created by PhpStorm.
 * User: ryanositis
 * Date: 1/4/18
 * Time: 1:10 PM
 */

/**
 * Implementationn of hook_install().
 */
function sales_insider_install() {
  $t = get_t();

  // Menu
  if(!menu_load('extranet')) {
    $menu = array(
      'menu_name' => 'extranet',
      'title' => 'Sales Insider Extranet',
      'description' => 'Menu Items for Extranet',
    );
    menu_save($menu);
  }


  // Roles & Permissions
  _sales_insider_add_role_permissions();

  // Pathauto Patterns
  variable_set('pathauto_node_extranet_news_pattern', 'extranet/news/[node:title]');
  variable_set('pathauto_node_extranet_promotion_pattern', 'extranet/promotion/[node:title]');
  variable_set('pathauto_node_media_gallery_pattern', 'media_gallery/[node:title]');

  // Content Types
  node_types_rebuild();
  $types = node_type_get_types();

  // Field definitions go here
  // Extranet Page
  if(!array_key_exists('extranet_page', $types)) {
    node_add_body_field($types['extranet_page']);
    // TODO: If field doesn't exist
    // TODO: Definition arrays should be in extranet_page.inc
    $extranet_page_fields = array(

    );
    foreach($extranet_page_fields as $field) {
      try {
        field_create_field($field);
      }
      catch (Exception $e) {
        // TODO: Watchdog
      }
    }

    // Attach field instance
    $extranet_page_instances = array(

    );
    foreach($extranet_page_instances as $instance) {
      $instance['entity_type'] = 'node';
      $instance['bundle'] = 'extranet_page';
      try {
        field_create_instance($instance);
      }
      catch (Exception $e) {
        // TODO: Watchdog
      }
    }
  }


  // Extranet News
  if(!array_key_exists('extranet_news', $types)) {
    node_add_body_field($types['extranet_news']);
  }
  // Extranet Promotions
  if(!array_key_exists('extranet_page', $types)) {
    node_add_body_field($types['extranet_page']);
  }



  // Groups
  // First, Group Types

}

/**
 * Implementation of hook_unistall().
 */
function sales_insider_uninstall() {
  // Menus
  if (module_exists('menu')) {
    if ($my_menu = menu_load('extranet')) {
      menu_delete($my_menu);
    }
  }

  // Content Types
  $content_types = ['extranet_page', 'extranet_news', 'extranet_promotion'];
  $sql = 'SELECT nid FROM {node} n WHERE n.type IN :type';
  $result = db_query($sql, array(':type' => $content_types));
  $nids = array();
  foreach ($result as $row) {
    $nids[] = $row->nid;
  }
  try {
    node_delete_multiple($nids); // Delete the nodes
    foreach($content_types as $type) {  // Delete the custom fields and instances.
      foreach(field_info_instances('node', $type) as $field_name => $instance) {
        field_delete_instance($instance);
      }
      node_type_delete($type); // ...and delete the content types.
    }
    field_purge_batch(1000);
  }
  catch (Exception $e) {
    // TODO: Watchdog here.
  }

  // Groups
}

/**
 * Helper function to add Extranet roles and permissions.
 */
function _sales_insider_add_role_permissions() {
    $role_names = array(
        'extranet user' => array('access extranet',),
        'extranet admin' => array('access extranet', 'administer extranet'),
    );

    foreach ($role_names as $role_name => $permissions) {
        $role = user_role_load_by_name($role_name);
        if (!$role) {
            $new_role = new stdClass();
            $new_role->name = $role_name;
            user_role_save($new_role);
            $role = $new_role;
        }

        $rid = $role->rid;
        $permissions_to_add = array();

        foreach ($permissions as $permission) {
            $permissions_to_add[$permission] = TRUE;
        }

        user_role_change_permissions($rid, $permissions_to_add);
    }
}

/**
 * Helper function to create the Extranet News content type.
 */
function _sales_insider_create_extranet_news_type() {
    //  The machine name of the content type can contain only lowercase alphanumeric
    //  characters and underscores.
    $extranet_news = 'extranet_news';

    //  Verify the content type does not already exist.
    if (!in_array( $extranet_news, node_type_get_names() ) ) {
        //  Create the type definition array.
        $type = array(
            'type' => $extranet_news,
            'name' => st( 'Extranet News' ),
            'base' => 'node_content',
            'description' => st( 'Extranet News: Sales Alerts and Announcements.' ),
            'custom' => 1,
            'modified' => 1,
            'locked' => 0,
        );
        $type = node_type_set_defaults( $type );
        node_type_save( $type );
        //  Add a body field.
        node_add_body_field( $type );
    }
    return;
}