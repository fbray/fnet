<?php
/**
 * @file custom_pages.module
 * TODO: Enter file description here.
 */

//ini_set('display_errors', 1);
//error_reporting(E_ALL);

/**
 * Implements hook_menu().
().
 */
function custom_pages_menu() {
//  // Expertise homepage
//  $items['expertise'] = array(
//    'title' => 'Solutions',
//    'page callback' => 'expertise_page_page',
//    'access callback' => true,
//    'access arguments' => array(),
//    'type' => MENU_CALLBACK,
//  );

  // Support homepage
  $items['support'] = array(
    'title' => 'Support',
    'page callback' => 'support_page_page',
    'access callback' => true,
    'access arguments' => array(),
    'type' => MENU_CALLBACK,
  );

  // Admin section
  $items['admin/content/custom_pages'] = array(
    'title' => 'Custom Pages',
    'description' => 'Configure Available Custom Pages',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('expertise_page_settings_form'),
    'access arguments' => array('Administer Custom Pages'),
  );
  $items['admin/content/custom_pages/expertise'] = array(
    'title' => 'Expertise',
    'type' => MENU_DEFAULT_LOCAL_TASK,
    'weight' => -10,
  );
  $items['admin/content/custom_pages/support'] = array(
    'title' => 'Support',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('support_page_settings_form'),
    'access arguments' => array('Administer Custom Pages'),
    'type' => MENU_LOCAL_TASK,
    'weight' => -9,
  );

  return $items;
}


/**
 * Title pre-processor for technical document page view.
 */
function support_page_tittle_generator($title, $subtitle = NULL) {
  return ucwords($title . (($subtitle) ? ': ' . $subtitle : ''));
}

///**
// * Menu access callback for Support Page.
// */
//function custom_pages_node_access($op) {
//  global $user;
//
//  // If no user object is supplied, the access check is for the current user.
//  if (empty($account)) {
//    $account = $user;
//  }
//  return user_access($op, $account);
//}


/**
 * Implements hook_permission().
().
 */
function custom_pages_permission() {
  // 'View Custom Pages',
  return array(
    'Administer Custom Pages' => array(
      'title' => t('Administer Custom Pages'),
      'description' => t('Allow to configure custom pages data'),
    ),
  );
}

/**
 * Implementation of preprocess hook.
 */
function custom_pages_preprocess_page(&$variables) {
  if ($variables['theme_hook_suggestions'][0] == 'page__expertise') {  //$variables['template_files'][0] == 'page-expertise'
    $expertise = variable_get('expertise_page_settings', array());
    switch ($variables['template_files'][1]) {
      case "page-expertise-topics":
        $variables['head_title'] = $expertise['tpc_head_title']; // 'Expertise Topics - Network Monitoring and Testing | Fluke Networks';
        $data = array(
          '#type' => 'html_tag',
          '#tag' => 'meta',
          '#attributes' => array(
            'name' => 'description',
            'content' => $expertise['tpc_meta_description'],
          ),
        );
        drupal_add_html_head($data, "meta_description");
        break;
      case "page-expertise-roles":
        $variables['head_title'] = $expertise['rle_head_title']; // 'Expertise Roles - Network Monitoring and Testing | Fluke Networks';
        $data = array(
          '#type' => 'html_tag',
          '#tag' => 'meta',
          '#attributes' => array(
            'name' => 'description',
            'content' => $expertise['rle_meta_description'],
          ),
        );
        drupal_add_html_head($data, "meta_description");
        break;
      case "page-expertise-industries":
        $variables['head_title'] = $expertise['ind_head_title']; // 'Expertise Industries - Network Monitoring and Testing | Fluke Networks';
        $data = array(
          '#type' => 'html_tag',
          '#tag' => 'meta',
          '#attributes' => array(
            'name' => 'description',
            'content' => $expertise['ind_meta_description'],
          ),
        );
        drupal_add_html_head($data, "meta_description");
        break;
      default:
        $variables['head_title'] = $expertise['head_title']; //'Expertise - Network Monitoring and Testing | Fluke Networks';
        $data = array(
          '#type' => 'html_tag',
          '#tag' => 'meta',
          '#attributes' => array(
            'name' => 'description',
            'content' => $expertise['meta_description'],
          ),
        );
        drupal_add_html_head($data, "meta_description");
    }
  }
//  else if ($variables['template_files'][0] == 'page-learn-about') {
//    $expertise = variable_get('expertise_page_settings', array());
//    $variables['head_title'] = $expertise['learnabout_head_title'];
//    drupal_add_html_head('<meta description="' . $expertise['learnabout_meta_description'] . '" />', $key = NULL /* TODO Set this variable. */);
//  }
//  else if ($variables['template_files'][0] == 'page-case-studies') {
//    $expertise = variable_get('expertise_page_settings', array());
//    $variables['head_title'] = $expertise['casestudy_head_title'];
//    drupal_add_html_head('<meta description="' . $expertise['casestudy_meta_description'] . '" />', $key = NULL /* TODO Set this variable. */);
//  }
  else if ($variables['theme_hook_suggestions'][0] == 'page__support') {  // $variables['template_files'][0] == 'page-support' ||
    $support = variable_get('support_page_settings', array());//
    $variables['head_title'] = $support['head_title']; // 'Service and Support | Fluke Networks';
    $data = array(
      '#type' => 'html_tag',
      '#tag' => 'meta',
      '#attributes' => array(
        'name' => 'description',
        'content' => $support['meta_description'],
      ),
    );
    drupal_add_html_head($data, "meta_description");
  // Fluke Networks offers world-class service and support. Contact a Fluke Networks authorized service center and get more information
  }
}

/**
 * Implementation of removing meta generator display
 */
function custom_pages_html_head_alter(&$head_elements) {
  unset($head_elements['system_meta_generator']);
}

/**
 * Implementation of Support page view.
 */
function support_page_page() {
  drupal_add_css(drupal_get_path('module', 'custom_pages') . '/support_page.css');
  drupal_add_js(drupal_get_path('module', 'custom_pages') . '/support_page.js');
  $output  = '';
  $support = variable_get('support_page_settings', array());
  $output .= theme('support_page', array('support' => $support));
  return $output;
}

/**
 * Implementation of Expertise page view.
 */
function expertise_page_page() {
  drupal_add_css(drupal_get_path('module', 'custom_pages') . '/expertise_page.css');
  drupal_add_js(drupal_get_path('module', 'custom_pages') . '/expertise_page.js');

  $output                       = '';
  $expertise                    = variable_get('expertise_page_settings', array());
  $expertise['casestudies']     = get_top_expertise_items('cs', 3);
  $expertise['learn_about']     = get_top_expertise_items('la', 3);
  $output                      .= theme('expertise_page', array('expertise' => $expertise));
  return $output;
}


/**
 *
 */
function get_top_expertise_items($op, $count = 3) {
  $output = array();
  switch ($op) {
    case 'cs':
      $tid = 38; //Dev site tid: 38
      break;
    case 'ft':
      $tid = 37; //Dev site tid: 37
      break;
    case 'la':
      $tid = 36; //Dev site tid: 36
      break;
    case 'tm':
      $tid = 39; //Dev site tid: 39
      break;
    default:
      drupal_set_message('Invalid expertise category selected!', 'error');
      return FALSE;
  }

/*  $result = db_query("SELECT DISTINCT tn.nid, n.title, cte.field_expertise_intro_value
                      FROM {term_node} tn
                        INNER JOIN {node} n ON n.nid=tn.nid AND n.vid = tn.vid
                        INNER JOIN {content_type_expertise} cte ON cte.nid=tn.nid AND cte.vid = tn.vid
                      WHERE tn.tid= :tid AND n.status=1
                        ORDER BY n.created DESC LIMIT 0, :count ; ", array(':tid' => $tid, ':count'=>$count)); */
  $result = db_query("SELECT DISTINCT tn.nid, n.title, cte.field_expertise_intro_value
                      FROM {taxonomy_index} tn
                        INNER JOIN {node} n ON n.nid=tn.nid
                        INNER JOIN {content_type_expertise} cte ON cte.nid=tn.nid
                      WHERE tn.tid= :tid AND n.status=1
                        ORDER BY n.created DESC LIMIT 0, $count ; ", array(':tid' => $tid));
  $i = 0;
  foreach ($result as $record) {
    $output[$i]['title'] = $record->title;
    $output[$i]['nid']   = $record->nid;
    $output[$i]['desc']  = $record->field_expertise_intro_value;
    $i++;
  }
  return $output;
}



/**
 * Implements hook_theme()
().
 */
function custom_pages_theme() {
  return array(
    'support_page' => array('template' => 'support_page', 'variables' => array('support' => array())),
    'expertise_page' => array('template' => 'expertise_page', 'variables' => array('expertise' => array())),
  );
}


/**
 * Supplementary function providing CuRL implementation
 */
function do_curl_request($url) {

  if (function_exists('curl_init')) {
    //open connection
    $ch = curl_init();

    //set the url, number of POST vars, POST data
    curl_setopt($ch, CURLOPT_URL,              $url);
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

    //execute post
    $result = curl_exec($ch);

    //close connection
    curl_close($ch);

    //return CuRL response
    return $result;
  }
  else {
    drupal_set_message(t('CuRL library is missing. Please contact the administrator'), 'error');
    return FALSE;
  }
}

/**
 * Configuration form for Support Page
 */
function support_page_settings_form() {
  $form = array();
  $vars = variable_get('support_page_settings', array());

  $form['head_title'] = array(
    '#title' => t('Support Page Header Title'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['head_title'],
  );
  $form['meta_description'] = array(
    '#title' => t('Support Page Meta Description'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['meta_description'],
  );

  // Latest Software Updates
  $form['latest_software_updates'] = array(
    '#type' => 'fieldset',
    '#title' => t('Latest Software Updates'),
    '#weight' => 5,
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['latest_software_updates']['lsu_title_1'] = array(
    '#prefix' => '<table><tr><td>',
    '#suffix' => '</td>',
    '#type' => 'textfield',
    '#title' => t('Link title' . '1'),
    '#default_value' => $vars['lsu_title_1'],
    '#weight' => -10,
  );
  $form['latest_software_updates']['lsu_link_1'] = array(
    '#prefix' => '<td>',
    '#suffix' => '</td></tr>',
    '#type' => 'textfield',
    '#title' => t('Link'),
    '#default_value' => $vars['lsu_link_1'],
    '#weight' => -9,
  );
  $form['latest_software_updates']['lsu_title_2'] = array(
    '#prefix' => '<tr><td>',
    '#suffix' => '</td>',
    '#type' => 'textfield',
    '#title' => t('Link title' . '2'),
    '#default_value' => $vars['lsu_title_2'],
    '#weight' => -8,
  );
  $form['latest_software_updates']['lsu_link_2'] = array(
    '#prefix' => '<td>',
    '#suffix' => '</td></tr>',
    '#type' => 'textfield',
    '#title' => t('Link'),
    '#default_value' => $vars['lsu_link_2'],
    '#weight' => -7,
  );
  $form['latest_software_updates']['lsu_title_3'] = array(
    '#prefix' => '<tr><td>',
    '#suffix' => '</td>',
    '#type' => 'textfield',
    '#title' => t('Link title' . '3'),
    '#default_value' => $vars['lsu_title_3'],
    '#weight' => -6,
  );
  $form['latest_software_updates']['lsu_link_3'] = array(
    '#prefix' => '<td>',
    '#suffix' => '</td></tr></table>',
    '#type' => 'textfield',
    '#title' => t('Link'),
    '#default_value' => $vars['lsu_link_3'],
    '#weight' => -5,
  );

  //Popular Downloads
  $form['popular_downloads'] = array(
    '#type' => 'fieldset',
    '#title' => t('Popular Downloads'),
    '#weight' => 5,
    '#collapsible' => TRUE,
    '#collapsed' => FALSE,
  );
  $form['popular_downloads']['pd_title_1'] = array(
    '#prefix' => '<table><tr><td>',
    '#suffix' => '</td>',
    '#type' => 'textfield',
    '#title' => t('Link title' . '1'),
    '#default_value' => $vars['pd_title_1'],
    '#weight' => -10,
  );
  $form['popular_downloads']['pd_link_1'] = array(
    '#prefix' => '<td>',
    '#suffix' => '</td></tr>',
    '#type' => 'textfield',
    '#title' => t('Link'),
    '#default_value' => $vars['pd_link_1'],
    '#weight' => -9,
  );
  $form['popular_downloads']['pd_title_2'] = array(
    '#prefix' => '<tr><td>',
    '#suffix' => '</td>',
    '#type' => 'textfield',
    '#title' => t('Link title' . '2'),
    '#default_value' => $vars['pd_title_2'],
    '#weight' => -8,
  );
  $form['popular_downloads']['pd_link_2'] = array(
    '#prefix' => '<td>',
    '#suffix' => '</td></tr>',
    '#type' => 'textfield',
    '#title' => t('Link'),
    '#default_value' => $vars['pd_link_2'],
    '#weight' => -7,
  );
  $form['popular_downloads']['pd_title_3'] = array(
    '#prefix' => '<tr><td>',
    '#suffix' => '</td>',
    '#type' => 'textfield',
    '#title' => t('Link title' . '3'),
    '#default_value' => $vars['pd_title_3'],
    '#weight' => -6,
  );
  $form['popular_downloads']['pd_link_3'] = array(
    '#prefix' => '<td>',
    '#suffix' => '</td></tr></table>',
    '#type' => 'textfield',
    '#title' => t('Link'),
    '#default_value' => $vars['pd_link_3'],
    '#weight' => -5,
  );

  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save configurations'),
    '#weight' => 100,
  );
  return $form;
}


/**
 * Implementations of hook_submit() for Support Page Configuration form
 */
function support_page_settings_form_submit($form, &$form_state) {
  $vars = array();
  for ($i = 1; $i <= 3; $i++) {
    $vars['lsu_title_' . $i] = $form['#post']['lsu_title_' . $i];
    $vars['lsu_link_'  . $i] = $form['#post']['lsu_link_'  . $i];

    $vars['pd_title_' . $i]  = $form['#post']['pd_title_' . $i];
    $vars['pd_link_'  . $i]  = $form['#post']['pd_link_'  . $i];
  }
  $vars['head_title'] = $form['#post']['head_title'];
  $vars['meta_description'] = $form['#post']['meta_description'];
  variable_set('support_page_settings', $vars);
  drupal_set_message('Configurations updated successfully.');
}


/**
 * Configuration form for Expertise Page
 */
function expertise_page_settings_form() {
  $form = array();
  $vars = variable_get('expertise_page_settings', array());

  $form['head_title'] = array(
    '#title' => t('Expertise Page Header Title'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['head_title'],
  );
  $form['meta_description'] = array(
    '#title' => t('Expertise Page Meta Description'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['meta_description'],
  );

  $form['tpc_head_title'] = array(
    '#title' => t('Expertise Topics Page Header Title'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['tpc_head_title'],
  );
  $form['tpc_meta_description'] = array(
    '#title' => t('Expertise Topics Page Meta Description'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['tpc_meta_description'],
  );

  $form['rle_head_title'] = array(
    '#title' => t('Expertise Roles Page Header Title'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['rle_head_title'],
  );
  $form['rle_meta_description'] = array(
    '#title' => t('Expertise Roles Page Meta Description'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['rle_meta_description'],
  );

  $form['ind_head_title'] = array(
    '#title' => t('Expertise Industries Page Header Title'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['ind_head_title'],
  );
  $form['ind_meta_description'] = array(
    '#title' => t('Expertise Industries Page Meta Description'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['ind_meta_description'],
  );

  $form['learnabout_head_title'] = array(
    '#title' => t('Expertise Learn About Page Header Title'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['learnabout_head_title'],
  );
  $form['learnabout_meta_description'] = array(
    '#title' => t('Expertise Learn About Page Meta Description'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['learnabout_meta_description'],
  );

  $form['casestudy_head_title'] = array(
    '#title' => t('Expertise Case Studies Page Header Title'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['casestudy_head_title'],
  );
  $form['casestudy_meta_description'] = array(
    '#title' => t('Expertise Case Studies Page Meta Description'),
    '#type' => 'textfield',
    '#maxlength' => 255,
    '#default_value' => $vars['casestudy_meta_description'],
  );
  /*
   $form['testimonial'] = array(
   '#title'         => t('Testimonial'),
   '#type'          => 'textarea',
   '#default_value' => $vars['testimonial'],
   '#weight'        => -4
   );
   */
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save configurations'),
    '#weight' => 100,
  );
  return $form;
}

/**
 * Implementations of hook_submit() for Expertise Page Configuration form
 */
function expertise_page_settings_form_submit($form, &$form_state) {
  $vars = array();
//  $vars['testimonial'] = $form['#post']['testimonial'];
  $vars['head_title'] = $form['#post']['head_title'];
  $vars['meta_description'] = $form['#post']['meta_description'];
  $vars['tpc_head_title'] = $form['#post']['tpc_head_title'];
  $vars['tpc_meta_description'] = $form['#post']['tpc_meta_description'];
  $vars['rle_head_title'] = $form['#post']['rle_head_title'];
  $vars['rle_meta_description'] = $form['#post']['rle_meta_description'];
  $vars['ind_head_title'] = $form['#post']['ind_head_title'];
  $vars['ind_meta_description'] = $form['#post']['ind_meta_description'];
  $vars['learnabout_head_title'] = $form['#post']['learnabout_head_title'];
  $vars['learnabout_meta_description'] = $form['#post']['learnabout_meta_description'];
  $vars['casestudy_head_title'] = $form['#post']['casestudy_head_title'];
  $vars['casestudy_meta_description'] = $form['#post']['casestudy_meta_description'];
  variable_set('expertise_page_settings', $vars);
  drupal_set_message(t('Configurations updated successfully.'));
}
