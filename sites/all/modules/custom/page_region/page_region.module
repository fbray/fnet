<?php

/**
 * @file
 * Module to implement regionality for page_reg content type.
 */

include_once 'page_region.features.inc';

/**
 * Implements hook_node_view().
 */
function page_region_node_view($node, $view_mode, $langcode) {

  if (($node->type == 'page_reg') && ($view_mode == 'full')) {

    $siteReg = module_invoke('fnet_helper', 'site_region');
    $regLang = $siteReg["regLang"];
    // Get possible override nids.
    $nids = array();
    $nid_fields = fnet_common_get_field_values('node', $node, 'field_page_reg_langreg');
    foreach ($nid_fields as $values) {
      $nids[] = $values['nid'];
    }

    if (!count($nids)) {
      return;
    }

    $qualified_language_override_node = NULL;

    // Find override node with matching reglang.
    $query = new EntityFieldQuery();
    $query->entityCondition('entity_type', 'node')
      ->propertyCondition('status', NODE_PUBLISHED)
      ->propertyCondition('nid', $nids, 'IN')
      ->fieldCondition('field_page_reg_lang_lng', 'value', $regLang, 'STARTS_WITH')
      ->range(0, 1);

    $result = $query->execute();
    // At this point, data is render array in node->content.
    // Replace original HTML with that from override.
    if (isset($result['node'])) {
      foreach ($result['node'] as $key => $value) {
        $qualified_language_override_node = node_load($key);
        if (isset($qualified_language_override_node->body['en'])) {
          $qualified_language_override_node->body['und'] = $qualified_language_override_node->body['en'];
        }
        break;
      }
      $node->content['body'][0]['#markup'] = fnet_common_get_field_value('node', $qualified_language_override_node, 'body');
    }
  }
}
